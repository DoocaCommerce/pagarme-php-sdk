<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

class CreateSellerRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $name;

    /**
     * @var string|null
     */
    private $code;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var string|null
     */
    private $document;

    /**
     * @var CreateAddressRequest|null
     */
    private $address;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var array
     */
    private $metadata;

    /**
     * @param string $name
     * @param array $metadata
     */
    public function __construct(string $name, array $metadata)
    {
        $this->name = $name;
        $this->metadata = $metadata;
    }

    /**
     * Returns Name.
     *
     * Name
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * Name
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Code.
     *
     * Seller's code identification
     */
    public function getCode(): ?string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     *
     * Seller's code identification
     *
     * @maps code
     */
    public function setCode(?string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Description.
     *
     * Description
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * Description
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Document.
     *
     * Document number (individual / company)
     */
    public function getDocument(): ?string
    {
        return $this->document;
    }

    /**
     * Sets Document.
     *
     * Document number (individual / company)
     *
     * @maps document
     */
    public function setDocument(?string $document): void
    {
        $this->document = $document;
    }

    /**
     * Returns Address.
     *
     * Address
     */
    public function getAddress(): ?CreateAddressRequest
    {
        return $this->address;
    }

    /**
     * Sets Address.
     *
     * Address
     *
     * @maps address
     */
    public function setAddress(?CreateAddressRequest $address): void
    {
        $this->address = $address;
    }

    /**
     * Returns Type.
     *
     * Person type (individual / company)
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * Person type (individual / company)
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Metadata.
     *
     * Metadata
     */
    public function getMetadata(): array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     *
     * Metadata
     *
     * @required
     * @maps metadata
     */
    public function setMetadata(array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return mixed
     */
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['name']            = $this->name;
        if (isset($this->code)) {
            $json['code']        = $this->code;
        }
        if (isset($this->description)) {
            $json['description'] = $this->description;
        }
        if (isset($this->document)) {
            $json['document']    = $this->document;
        }
        if (isset($this->address)) {
            $json['address']     = $this->address;
        }
        if (isset($this->type)) {
            $json['type']        = $this->type;
        }
        $json['metadata']        = $this->metadata;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
