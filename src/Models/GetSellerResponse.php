<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

class GetSellerResponse implements \JsonSerializable
{
    /**
     * @var string
     */
    private $id;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $code;

    /**
     * @var string
     */
    private $document;

    /**
     * @var string
     */
    private $description;

    /**
     * @var string
     */
    private $status;

    /**
     * @var string
     */
    private $createdAt;

    /**
     * @var string
     */
    private $updatedAt;

    /**
     * @var GetAddressResponse
     */
    private $address;

    /**
     * @var array
     */
    private $metadata;

    /**
     * @var string|null
     */
    private $deletedAt;

    /**
     * @param string $id
     * @param string $name
     * @param string $code
     * @param string $document
     * @param string $description
     * @param string $status
     * @param string $createdAt
     * @param string $updatedAt
     * @param GetAddressResponse $address
     * @param array $metadata
     */
    public function __construct(
        string $id,
        string $name,
        string $code,
        string $document,
        string $description,
        string $status,
        string $createdAt,
        string $updatedAt,
        GetAddressResponse $address,
        array $metadata
    ) {
        $this->id = $id;
        $this->name = $name;
        $this->code = $code;
        $this->document = $document;
        $this->description = $description;
        $this->status = $status;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->address = $address;
        $this->metadata = $metadata;
    }

    /**
     * Returns Id.
     *
     * Identification
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * Identification
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Code.
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     *
     * @required
     * @maps code
     */
    public function setCode(string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Document.
     */
    public function getDocument(): string
    {
        return $this->document;
    }

    /**
     * Sets Document.
     *
     * @required
     * @maps document
     */
    public function setDocument(string $document): void
    {
        $this->document = $document;
    }

    /**
     * Returns Description.
     *
     * Description
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * Description
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Status.
     *
     * Status
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * Status
     *
     * @required
     * @maps Status
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Created At.
     *
     * Creation date
     */
    public function getCreatedAt(): string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * Creation date
     *
     * @required
     * @maps CreatedAt
     */
    public function setCreatedAt(string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     *
     * Updated date
     */
    public function getUpdatedAt(): string
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * Updated date
     *
     * @required
     * @maps UpdatedAt
     */
    public function setUpdatedAt(string $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Address.
     *
     * Address
     */
    public function getAddress(): GetAddressResponse
    {
        return $this->address;
    }

    /**
     * Sets Address.
     *
     * Address
     *
     * @required
     * @maps Address
     */
    public function setAddress(GetAddressResponse $address): void
    {
        $this->address = $address;
    }

    /**
     * Returns Metadata.
     *
     * Metadata
     */
    public function getMetadata(): array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     *
     * Metadata
     *
     * @required
     * @maps Metadata
     */
    public function setMetadata(array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Deleted At.
     *
     * Deleted date
     */
    public function getDeletedAt(): ?string
    {
        return $this->deletedAt;
    }

    /**
     * Sets Deleted At.
     *
     * Deleted date
     *
     * @maps DeletedAt
     */
    public function setDeletedAt(?string $deletedAt): void
    {
        $this->deletedAt = $deletedAt;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return mixed
     */
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']            = $this->id;
        $json['name']          = $this->name;
        $json['code']          = $this->code;
        $json['document']      = $this->document;
        $json['description']   = $this->description;
        $json['Status']        = $this->status;
        $json['CreatedAt']     = $this->createdAt;
        $json['UpdatedAt']     = $this->updatedAt;
        $json['Address']       = $this->address;
        $json['Metadata']      = $this->metadata;
        if (isset($this->deletedAt)) {
            $json['DeletedAt'] = $this->deletedAt;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
