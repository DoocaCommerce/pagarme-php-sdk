<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

class GetSellersRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $document;

    /**
     * @var string
     */
    private $code;

    /**
     * @var string
     */
    private $status;

    /**
     * @var string
     */
    private $type;

    /**
     * @var string|null
     */
    private $createdSince;

    /**
     * @var string|null
     */
    private $createdUntil;

    /**
     * @param string $name
     * @param string $document
     * @param string $code
     * @param string $status
     * @param string $type
     */
    public function __construct(string $name, string $document, string $code, string $status, string $type)
    {
        $this->name = $name;
        $this->document = $document;
        $this->code = $code;
        $this->status = $status;
        $this->type = $type;
    }

    /**
     * Returns Name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Document.
     */
    public function getDocument(): string
    {
        return $this->document;
    }

    /**
     * Sets Document.
     *
     * @required
     * @maps document
     */
    public function setDocument(string $document): void
    {
        $this->document = $document;
    }

    /**
     * Returns Code.
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     *
     * @required
     * @maps code
     */
    public function setCode(string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @required
     * @maps status
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Type.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @required
     * @maps type
     */
    public function setType(string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Created Since.
     */
    public function getCreatedSince(): ?string
    {
        return $this->createdSince;
    }

    /**
     * Sets Created Since.
     *
     * @maps created_Since
     */
    public function setCreatedSince(?string $createdSince): void
    {
        $this->createdSince = $createdSince;
    }

    /**
     * Returns Created Until.
     */
    public function getCreatedUntil(): ?string
    {
        return $this->createdUntil;
    }

    /**
     * Sets Created Until.
     *
     * @maps created_Until
     */
    public function setCreatedUntil(?string $createdUntil): void
    {
        $this->createdUntil = $createdUntil;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return mixed
     */
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['name']              = $this->name;
        $json['document']          = $this->document;
        $json['code']              = $this->code;
        $json['status']            = $this->status;
        $json['type']              = $this->type;
        if (isset($this->createdSince)) {
            $json['created_Since'] = $this->createdSince;
        }
        if (isset($this->createdUntil)) {
            $json['created_Until'] = $this->createdUntil;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
