<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

class UpdateSellerRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $code;

    /**
     * @var string
     */
    private $description;

    /**
     * @var string
     */
    private $document;

    /**
     * @var string
     */
    private $status;

    /**
     * @var string
     */
    private $type;

    /**
     * @var CreateAddressRequest
     */
    private $address;

    /**
     * @var array
     */
    private $metadata;

    /**
     * @param string $name
     * @param string $code
     * @param string $description
     * @param string $document
     * @param string $status
     * @param string $type
     * @param CreateAddressRequest $address
     * @param array $metadata
     */
    public function __construct(
        string $name,
        string $code,
        string $description,
        string $document,
        string $status,
        string $type,
        CreateAddressRequest $address,
        array $metadata
    ) {
        $this->name = $name;
        $this->code = $code;
        $this->description = $description;
        $this->document = $document;
        $this->status = $status;
        $this->type = $type;
        $this->address = $address;
        $this->metadata = $metadata;
    }

    /**
     * Returns Name.
     *
     * Seller name
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * Seller name
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Code.
     *
     * Seller code
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     *
     * Seller code
     *
     * @required
     * @maps code
     */
    public function setCode(string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Description.
     *
     * Seller description
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * Seller description
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Document.
     *
     * Seller document CPF or CNPJ
     */
    public function getDocument(): string
    {
        return $this->document;
    }

    /**
     * Sets Document.
     *
     * Seller document CPF or CNPJ
     *
     * @required
     * @maps document
     */
    public function setDocument(string $document): void
    {
        $this->document = $document;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @required
     * @maps status
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Type.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @required
     * @maps type
     */
    public function setType(string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Address.
     */
    public function getAddress(): CreateAddressRequest
    {
        return $this->address;
    }

    /**
     * Sets Address.
     *
     * @required
     * @maps address
     */
    public function setAddress(CreateAddressRequest $address): void
    {
        $this->address = $address;
    }

    /**
     * Returns Metadata.
     */
    public function getMetadata(): array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     *
     * @required
     * @maps metadata
     */
    public function setMetadata(array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return mixed
     */
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['name']        = $this->name;
        $json['code']        = $this->code;
        $json['description'] = $this->description;
        $json['document']    = $this->document;
        $json['status']      = $this->status;
        $json['type']        = $this->type;
        $json['address']     = $this->address;
        $json['metadata']    = $this->metadata;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
