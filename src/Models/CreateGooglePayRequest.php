<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

/**
 * The GooglePay Token Payment Request
 */
class CreateGooglePayRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $version;

    /**
     * @var string
     */
    private $data;

    /**
     * @var CreateGooglePayIntermediateSigningKeyRequest
     */
    private $intermediateSigningKey;

    /**
     * @var string
     */
    private $signature;

    /**
     * @var string
     */
    private $signedMessage;

    /**
     * @param string $version
     * @param string $data
     * @param CreateGooglePayIntermediateSigningKeyRequest $intermediateSigningKey
     * @param string $signature
     * @param string $signedMessage
     */
    public function __construct(
        string $version,
        string $data,
        CreateGooglePayIntermediateSigningKeyRequest $intermediateSigningKey,
        string $signature,
        string $signedMessage
    ) {
        $this->version = $version;
        $this->data = $data;
        $this->intermediateSigningKey = $intermediateSigningKey;
        $this->signature = $signature;
        $this->signedMessage = $signedMessage;
    }

    /**
     * Returns Version.
     * Informação sobre a versão do token. Único valor aceito é EC_v2
     */
    public function getVersion(): string
    {
        return $this->version;
    }

    /**
     * Sets Version.
     * Informação sobre a versão do token. Único valor aceito é EC_v2
     *
     * @required
     * @maps version
     */
    public function setVersion(string $version): void
    {
        $this->version = $version;
    }

    /**
     * Returns Data.
     * Dados de pagamento criptografados. Corresponde ao encryptedMessage do token Google.
     */
    public function getData(): string
    {
        return $this->data;
    }

    /**
     * Sets Data.
     * Dados de pagamento criptografados. Corresponde ao encryptedMessage do token Google.
     *
     * @required
     * @maps data
     */
    public function setData(string $data): void
    {
        $this->data = $data;
    }

    /**
     * Returns Intermediate Signing Key.
     * The GooglePay intermediate signing key request
     */
    public function getIntermediateSigningKey(): CreateGooglePayIntermediateSigningKeyRequest
    {
        return $this->intermediateSigningKey;
    }

    /**
     * Sets Intermediate Signing Key.
     * The GooglePay intermediate signing key request
     *
     * @required
     * @maps intermediate_signing_key
     */
    public function setIntermediateSigningKey(
        CreateGooglePayIntermediateSigningKeyRequest $intermediateSigningKey
    ): void {
        $this->intermediateSigningKey = $intermediateSigningKey;
    }

    /**
     * Returns Signature.
     * Assinatura dos dados de pagamento. Verifica se a origem da mensagem é o Google. Corresponde ao
     * signature do token Google.
     */
    public function getSignature(): string
    {
        return $this->signature;
    }

    /**
     * Sets Signature.
     * Assinatura dos dados de pagamento. Verifica se a origem da mensagem é o Google. Corresponde ao
     * signature do token Google.
     *
     * @required
     * @maps signature
     */
    public function setSignature(string $signature): void
    {
        $this->signature = $signature;
    }

    /**
     * Returns Signed Message.
     */
    public function getSignedMessage(): string
    {
        return $this->signedMessage;
    }

    /**
     * Sets Signed Message.
     *
     * @required
     * @maps signed_message
     */
    public function setSignedMessage(string $signedMessage): void
    {
        $this->signedMessage = $signedMessage;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['version']                  = $this->version;
        $json['data']                     = $this->data;
        $json['intermediate_signing_key'] = $this->intermediateSigningKey;
        $json['signature']                = $this->signature;
        $json['signed_message']           = $this->signedMessage;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
